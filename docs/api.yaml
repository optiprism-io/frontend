openapi: 3.0.0
info:
  version: 1.0.0
  title: OptiPrism
  termsOfService: http://optiprism.io/terms/
  contact:
    email: api@optiprism.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ravlio/optiprism/1.0.0
  - description: OptiPrism API server
    url: /
tags:
  - name: event
    description: Event
  - name: property
    description: Property
paths:
  /schema/events:
    get:
      summary: Events list
      responses:
        '200':
          $ref: '#/components/responses/ListEvents'
  /schema/custom-events:
    get:
      summary: Custom events list
      responses:
        '200':
          $ref: '#/components/responses/ListCustomEvents'
  /schema/event-properties:
    get:
      summary: Event properties list
      responses:
        '200':
          $ref: '#/components/responses/ListEventProperties'
  /schema/event-custom-properties:
    get:
      summary: Event custom properties list
      responses:
        '200':
          $ref: '#/components/responses/ListEventCustomProperties'
  /schema/user-properties:
    get:
      summary: User properties list
      responses:
        '200':
          $ref: '#/components/responses/ListUserProperties'
  /schema/user-custom-properties:
    get:
      summary: User custom properties list
      responses:
        '200':
          $ref: '#/components/responses/ListUserCustomProperties'
  /properties/event/values:
    get:
      summary: List event property values
      parameters:
        - name: event
          in: query
          description: Event Name
          required: true
          schema:
            type: string
        - name: property
          in: query
          description: Property Name
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ListPropertyValues'
  /properties/custom-event/values:
    get:
      summary: List custom event property values
      parameters:
        - name: event
          in: query
          description: Event Name
          required: true
          schema:
            type: string
        - name: property
          in: query
          description: Property Name
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ListPropertyValues'
  /properties/user/values:
    get:
      summary: List user property values
      parameters:
        - name: event
          in: query
          description: Event Name
          required: true
          schema:
            type: string
        - name: property
          in: query
          description: Property Name
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ListPropertyValues'
  /reports/event-segmentation:
    post:
      summary: Event segmentation report
      responses:
        '200':
          $ref: '#/components/responses/EventSegmentation'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSegmentation'

externalDocs:
  description: Find out more about OptiPrism api
  url: http://dev.optiprism.io/api
components:
  responses:
    ListPropertyValues:
      description: list property values
      content:
        application/json:
          schema:
            type: object
            properties:
              values:
                oneOf:
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      type: number
    ListEvents:
      description: event list
      content:
        application/json:
          schema:
            type: object
            properties:
              events:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    ListCustomEvents:
      description: custom event list
      content:
        application/json:
          schema:
            type: object
            properties:
              customEvents:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEvent'
    ListEventProperties:
      description: event properties list
      content:
        application/json:
          schema:
            type: object
            properties:
              eventProperties:
                type: array
                items:
                  $ref: '#/components/schemas/EventProperty'
    ListEventCustomProperties:
      description: event custom properties list
      content:
        application/json:
          schema:
            type: object
            properties:
              eventCustomProperties:
                type: array
                items:
                  $ref: '#/components/schemas/EventCustomProperty'
    ListUserProperties:
      description: user properties list
      content:
        application/json:
          schema:
            type: object
            properties:
              userProperties:
                type: array
                items:
                  $ref: '#/components/schemas/UserProperty'
    ListUserCustomProperties:
      description: event properties list
      content:
        application/json:
          schema:
            type: object
            properties:
              userCustomProperties:
                type: array
                items:
                  $ref: '#/components/schemas/EventProperty'
    EventSegmentation:
      description: event segmentation query response
      content:
        application/json:
          schema:
            type: object
            properties:
              dimensionHeaders:
                type: array
                items:
                  type: string
              metricHeaders:
                type: array
                items:
                  type: string
              dimensions:
                type: array
                items:
                  type: array
                  items:
                    type: string
              singles:
                type: array
                items:
                  type: integer
              series:
                type: array
                items:
                  type: array
                  items:
                    type: integer
              compare:
                type: object
                properties:
                  dimensions:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
                  singles:
                    type: array
                    items:
                      type: integer
                  series:
                    type: array
                    items:
                      type: array
                      items:
                        type: integer
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
        teams:
          type: array
          items:
            type: integer
        projects:
          type: array
          items:
            type: object
            properties:
              projectId:
                type: integer
                format: int64
              role:
                type: string
        status:
          type: string
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        name:
          type: string
        sessionTimeoutSeconds:
          type: integer
        teams:
          type: array
          items:
            type: integer
        users:
          type: array
          items:
            type: integer
    Organization:
      type: object
      properties:
        teams:
          type: array
          items:
            type: integer
        users:
          type: array
          items:
            type: integer
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        properties:
          type: array
          items:
            type: integer
            format: i64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
    CustomEvent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
    EventProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        events:
          type: array
          items:
            type: integer
            format: i64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        displayName:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        required:
          type: boolean
        nullable:
          type: boolean
        isArray:
          type: boolean
        isDictionary:
          type: boolean
        dictionaryType:
          $ref: '#/components/schemas/DataType'
        tags:
          type: array
          items:
            type: string
    EventCustomProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        events:
          type: array
          items:
            type: integer
            format: i64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        nullable:
          type: boolean
        isArray:
          type: boolean
        tags:
          type: array
          items:
            type: string

    UserProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        nullable:
          type: boolean
        isArray:
          type: boolean
        tags:
          type: array
          items:
            type: string

    UserCustomProperty:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: integer
          format: int64
        updatedBy:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        isSystem:
          type: boolean
        status:
          type: string
          enum:
            - enabled
            - disabled
        name:
          type: string
        description:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
        nullable:
          type: boolean
        isArray:
          type: boolean
        tags:
          type: array
          items:
            type: string

    AnalysisLinear:
      type: object
      properties:
        type:
          type: string
          enum:
            - linear
    AnalysisRollingAverage:
      type: object
      properties:
        type:
          type: string
          enum:
            - rollingAverage
        window:
          type: integer
    AnalysisRollingWindow:
      type: object
      properties:
        type:
          type: string
          enum:
            - rollingWindow
        window:
          type: integer
    AnalysisCumulative:
      type: object
      properties:
        type:
          type: string
          enum:
            - cumulative
    EventSegmentation:
      type: object
      properties:
        time:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TimeRange'
            - $ref: '#/components/schemas/TimeLast'
        intervalUnit:
          $ref: '#/components/schemas/TimeUnit'
        chartType:
          $ref: '#/components/schemas/ChartType'
        analysis:
          type: object
          oneOf:
            - $ref: '#/components/schemas/AnalysisLinear'
            - $ref: '#/components/schemas/AnalysisRollingAverage'
            - $ref: '#/components/schemas/AnalysisRollingWindow'
            - $ref: '#/components/schemas/AnalysisCumulative'
        compare:
          type: object
          properties:
            offset:
              type: integer
            unit:
              $ref: '#/components/schemas/TimeUnit'
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationEvent'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationFilter'
        breakdowns:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationBreakdown'
        queries:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationQuery'
        segments:
          type: array
          items:
            $ref: '#/components/schemas/EventSegmentationSegment'

    EventSegmentationEvent:
      allOf:
        - $ref: '#/components/schemas/EventRef'
        - type: object
          properties:
            filters:
              type: array
              items:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/FilterByProperty'

    EventSegmentationFilter:
      type: object
      oneOf:
        - $ref: '#/components/schemas/FilterByProperty'
        - $ref: '#/components/schemas/FilterByCohort'

    FilterByCohort:
      type: object
      properties:
        filteType:
          type: string
          enum:
            - cohort
        cohortId:
          type: integer
          format: int64

    FilterByProperty:
      type: object
      allOf:
        - type: object
          properties:
            filterType:
              type: string
              enum:
                - property
            propertyName:
              type: string
            operation:
              $ref: '#/components/schemas/Operation'
            values:
              type: array
              items:
                $ref: '#/components/schemas/Value'

    EventSegmentationBreakdown:
      type: object
      oneOf:
        - $ref: '#/components/schemas/BreakdownByUserProperty'
        - $ref: '#/components/schemas/BreakdownByEventCommonProperty'
        - $ref: '#/components/schemas/BreakdownByEventProperty'
        - $ref: '#/components/schemas/BreakdownByCohort'

    BreakdownByUserProperty:
      type: object
      properties:
        breakdownType:
          type: string
          enum:
            - userProperty
        propertyName:
          type: string

    BreakdownByEventCommonProperty:
      type: object
      properties:
        breakdownType:
          type: string
          enum:
            - eventCommonProperty
        propertyName:
          type: string

    BreakdownByEventProperty:
      type: object
      properties:
        breakdownType:
          type: string
          enum:
            - eventProperty
        eventName:
          type: string
        propertyName:
          type: string

    BreakdownByCohort:
      type: object
      properties:
        breakdownType:
          type: string
          enum:
            - cohort
        cohortId:
          type: integer
          format: in64


    EventSegmentationSegment:
      type: object
      properties:
        name:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/SegmentCondition'

    SegmentCondition:
      type: object
      oneOf:
        - $ref: '#/components/schemas/SegmentConditionHasPropertyValue'
        - $ref: '#/components/schemas/SegmentConditionHadPropertyValue'
        - $ref: '#/components/schemas/SegmentConditionDidEvent'
        - $ref: '#/components/schemas/SegmentConditionFunnel'
        - $ref: '#/components/schemas/SegmentConditionReteined'

    TimeRange:
      type: object
      properties:
        type:
          type: string
          enum:
            - range
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time

    TimeLast:
      type: object
      properties:
        type:
          type: string
          enum:
            - last
        count:
          type: integer
        unit:
          $ref: '#/components/schemas/TimeUnit'

    TimeAfterFirstUse:
      type: object
      properties:
        type:
          type: string
          enum:
            - afterFirstUse
        within:
          type: integer
        unit:
          $ref: '#/components/schemas/TimeUnit'

    TimeWindowEach:
      type: object
      properties:
        type:
          type: string
          enum:
            - windowEach
        unit:
          $ref: '#/components/schemas/TimeUnit'

    TimeUnit:
      type: string
      enum:
        - "minute"
        - "hour"
        - "day"
        - "week"

    ChartType:
      type: string
      enum:
        - "line"
        - "bar"

    SegmentConditionHasPropertyValue:
      type: object
      properties:
        conditionType:
          type: string
          enum:
            - hasPropertyValue
        propertyName:
          type: string
        operation:
          $ref: '#/components/schemas/Operation'
        values:
          type: array
          items:
            $ref: '#/components/schemas/Value'

    SegmentConditionHadPropertyValue:
      type: object
      properties:
        conditionType:
          type: string
          enum:
            - hadPropertyValue
        propertyName:
          type: string
        operation:
          $ref: '#/components/schemas/Operation'
        values:
          type: array
          items:
            $ref: '#/components/schemas/Value'
        time:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TimeRange'
            - $ref: '#/components/schemas/TimeLast'
            - $ref: '#/components/schemas/TimeWindowEach'

    DidEventCount:
      type: object
      properties:
        type:
          type: string
          enum:
            - count
        operation:
          $ref: '#/components/schemas/Operation'
        value:
          type: integer
        time:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TimeRange'
            - $ref: '#/components/schemas/TimeLast'
            - $ref: '#/components/schemas/TimeAfterFirstUse'
            - $ref: '#/components/schemas/TimeWindowEach'

    DidEventRelativeCount:
      type: object
      properties:
        type:
          type: string
          enum:
            - relativeCount
        operation:
          $ref: '#/components/schemas/Operation'
        rightEventName:
          type: string
        time:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TimeRange'
            - $ref: '#/components/schemas/TimeLast'
            - $ref: '#/components/schemas/TimeAfterFirstUse'
            - $ref: '#/components/schemas/TimeWindowEach'

    DidEventAggregateProperty:
      type: object
      allOf:
        - type: object
          properties:
            type:
              type: string
              enum:
                - aggregateProperty
        - $ref: '#/components/schemas/PropertyRef'
        - type: object
          properties:
            aggregate:
              $ref: '#/components/schemas/QueryUserAggregate'
            operation:
              $ref: '#/components/schemas/Operation'
            value:
              type: integer
            time:
              type: object
              oneOf:
                - $ref: '#/components/schemas/TimeRange'
                - $ref: '#/components/schemas/TimeLast'
                - $ref: '#/components/schemas/TimeAfterFirstUse'
                - $ref: '#/components/schemas/TimeWindowEach'

    DidEventHistoricalCount:
      type: object
      properties:
        type:
          type: string
          enum:
            - historicalCount
        operation:
          $ref: '#/components/schemas/Operation'
        value:
          type: integer
        time:
          type: object
          oneOf:
            - $ref: '#/components/schemas/TimeRange'
            - $ref: '#/components/schemas/TimeLast'
            - $ref: '#/components/schemas/TimeAfterFirstUse'
            - $ref: '#/components/schemas/TimeWindowEach'

    SegmentConditionDidEvent:
      type: object
      properties:
        conditionType:
          type: string
          enum:
            - didEvent
        eventName:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterByProperty'
        aggregate:
          type: object
          oneOf:
            - $ref: '#/components/schemas/DidEventCount'
            - $ref: '#/components/schemas/DidEventRelativeCount'
            - $ref: '#/components/schemas/DidEventAggregateProperty'
            - $ref: '#/components/schemas/DidEventHistoricalCount'

    SegmentConditionFunnel:
      type: object
      properties:
        conditionType:
          type: string
          enum:
            - funnel
        last:
          type: integer
        bucket:
          $ref: '#/components/schemas/TimeUnit'


    SegmentConditionReteined:
      type: object

    EventSegmentationQuery:
      type: object
      oneOf:
        - $ref: '#/components/schemas/QuerySimple'
        - $ref: '#/components/schemas/QueryAggregatePerUser'
        - $ref: '#/components/schemas/QueryAggregatePropertyPerUser'
        - $ref: '#/components/schemas/QueryAggregateProperty'
        - $ref: '#/components/schemas/QueryFormula'

    QuerySimple:
      type: object
      properties:
        queryType:
          type: string
          enum:
            - simple
        query:
          type: string
          enum:
            - countEvents
            - countUniqueUsers
            - weeklyActiveUsers
            - monthlyActiveUsers

    QueryAggregatePerUser:
      type: object
      properties:
        queryType:
          type: string
          enum:
            - aggregatePerUser
        query:
          type: string
          enum:
            - countEvents
        aggregate:
          $ref: '#/components/schemas/QueryAggregate'

    QueryAggregatePropertyPerUser:
      type: object
      allOf:
        - type: object
          properties:
            queryType:
              type: string
              enum:
                - aggregatePropertyPerUser
        - $ref: '#/components/schemas/PropertyRef'
        - type: object
          properties:
            aggregatePerUser:
              $ref: '#/components/schemas/QueryUserAggregate'
            aggregate:
              $ref: '#/components/schemas/QueryAggregate'

    QueryAggregateProperty:
      type: object
      allOf:
        - type: object
          properties:
            queryType:
              type: string
              enum:
                - aggregateProperty
        - $ref: '#/components/schemas/PropertyRef'
        - type: object
          properties:
            aggregate:
              $ref: '#/components/schemas/QueryAggregate'

    QueryFormula:
      type: object
      properties:
        queryType:
          type: string
          enum:
            - formula
        formula:
          type: string
    QueryUserAggregate:
      type: string
      enum:
        - sum
        - avg
        - median
        - min
        - max
        - distinctCount

    QueryAggregate:
      type: string
      enum:
        - sum
        - avg
        - median
        - min
        - max
        - distinctCount
        - 25thPercentile
        - 75thPercentile
        - 90thPercentile
        - 99thPercentile

    Value:
      type: object
      oneOf:
        - type: string
        - type: integer
        - type: boolean
        - type: array
          items:
            type: string
        - type: array
          items:
            type: integer
        - type: array
          items:
            type: boolean

    Operation:
      type: string
      enum:
        - "="
        - "neq"
        - "gt"
        - "gte"
        - "lt"
        - "lte"
        - "true"
        - "false"
        - "exists"
        - "empty"
        - "arr_all"
        - "arr_any"
        - "arr_none"
        - "regex"

    PropertyRef:
      type: object
      properties:
        propertyName:
          type: string
        propertyType:
          $ref: '#/components/schemas/PropertyType'

    EventRef:
      type: object
      properties:
        eventName:
          type: string
        eventType:
          $ref: '#/components/schemas/EventType'

    EventType:
      type: string
      enum:
        - regular
        - custom

    PropertyType:
      type: string
      enum:
        - event
        - user

    DataType:
      type: string
      enum:
        - string
        - float64
        - int8
        - int16
        - int32
        - int64
        - uint8
        - uint16
        - uint32
        - uint64
        - boolean

    DataTypeFamily:
      type: string
      enum:
        - string
        - number
        - int8
        - int16
        - int32
        - int64
        - uint8
        - uint16
        - uint32
        - uint64
        - boolean